// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The `gitlab.getProjectMilestones` data source allows get details of a project milestones.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/milestones.html)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * // By project full path
 * const example = pulumi.output(gitlab.getProjectMilestones({
 *     project: "foo/bar",
 * }));
 * ```
 */
export function getProjectMilestones(args: GetProjectMilestonesArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectMilestonesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gitlab:index/getProjectMilestones:getProjectMilestones", {
        "iids": args.iids,
        "includeParentMilestones": args.includeParentMilestones,
        "project": args.project,
        "search": args.search,
        "state": args.state,
        "title": args.title,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjectMilestones.
 */
export interface GetProjectMilestonesArgs {
    iids?: number[];
    includeParentMilestones?: boolean;
    project: string;
    search?: string;
    state?: string;
    title?: string;
}

/**
 * A collection of values returned by getProjectMilestones.
 */
export interface GetProjectMilestonesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly iids?: number[];
    readonly includeParentMilestones?: boolean;
    readonly milestones: outputs.GetProjectMilestonesMilestone[];
    readonly project: string;
    readonly search?: string;
    readonly state?: string;
    readonly title?: string;
}

export function getProjectMilestonesOutput(args: GetProjectMilestonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectMilestonesResult> {
    return pulumi.output(args).apply(a => getProjectMilestones(a, opts))
}

/**
 * A collection of arguments for invoking getProjectMilestones.
 */
export interface GetProjectMilestonesOutputArgs {
    iids?: pulumi.Input<pulumi.Input<number>[]>;
    includeParentMilestones?: pulumi.Input<boolean>;
    project: pulumi.Input<string>;
    search?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}
