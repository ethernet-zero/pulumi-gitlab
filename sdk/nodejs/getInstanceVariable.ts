// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `gitlab.InstanceVariable` data source allows to retrieve details about an instance-level CI/CD variable.
 *
 * **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/instance_level_ci_variables.html)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gitlab from "@pulumi/gitlab";
 *
 * const foo = pulumi.output(gitlab.getInstanceVariable({
 *     key: "foo",
 * }));
 * ```
 */
export function getInstanceVariable(args: GetInstanceVariableArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceVariableResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gitlab:index/getInstanceVariable:getInstanceVariable", {
        "key": args.key,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceVariable.
 */
export interface GetInstanceVariableArgs {
    key: string;
}

/**
 * A collection of values returned by getInstanceVariable.
 */
export interface GetInstanceVariableResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    readonly masked: boolean;
    readonly protected: boolean;
    readonly value: string;
    readonly variableType: string;
}

export function getInstanceVariableOutput(args: GetInstanceVariableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceVariableResult> {
    return pulumi.output(args).apply(a => getInstanceVariable(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceVariable.
 */
export interface GetInstanceVariableOutputArgs {
    key: pulumi.Input<string>;
}
