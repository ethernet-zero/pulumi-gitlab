// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GitLab
{
    public static class GetClusterAgent
    {
        /// <summary>
        /// The `gitlab.ClusterAgent` data source allows to retrieve details about a GitLab Agent for Kubernetes.
        /// 
        /// &gt; Requires at least GitLab 14.10
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/cluster_agents.html)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(GitLab.GetClusterAgent.InvokeAsync(new GitLab.GetClusterAgentArgs
        ///         {
        ///             AgentId = 1,
        ///             Project = "12345",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClusterAgentResult> InvokeAsync(GetClusterAgentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterAgentResult>("gitlab:index/getClusterAgent:getClusterAgent", args ?? new GetClusterAgentArgs(), options.WithDefaults());

        /// <summary>
        /// The `gitlab.ClusterAgent` data source allows to retrieve details about a GitLab Agent for Kubernetes.
        /// 
        /// &gt; Requires at least GitLab 14.10
        /// 
        /// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/cluster_agents.html)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using GitLab = Pulumi.GitLab;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(GitLab.GetClusterAgent.InvokeAsync(new GitLab.GetClusterAgentArgs
        ///         {
        ///             AgentId = 1,
        ///             Project = "12345",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClusterAgentResult> Invoke(GetClusterAgentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterAgentResult>("gitlab:index/getClusterAgent:getClusterAgent", args ?? new GetClusterAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterAgentArgs : Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public int AgentId { get; set; }

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetClusterAgentArgs()
        {
        }
    }

    public sealed class GetClusterAgentInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public Input<int> AgentId { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetClusterAgentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterAgentResult
    {
        public readonly int AgentId;
        public readonly string CreatedAt;
        public readonly int CreatedByUserId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Project;

        [OutputConstructor]
        private GetClusterAgentResult(
            int agentId,

            string createdAt,

            int createdByUserId,

            string id,

            string name,

            string project)
        {
            AgentId = agentId;
            CreatedAt = createdAt;
            CreatedByUserId = createdByUserId;
            Id = id;
            Name = name;
            Project = project;
        }
    }
}
