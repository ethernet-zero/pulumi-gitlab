// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gitlab

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `ProjectMilestone` data source allows get details of a project milestone.
//
// **Upstream API**: [GitLab REST API docs](https://docs.gitlab.com/ee/api/milestones.html)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gitlab/sdk/v4/go/gitlab"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := gitlab.LookupProjectMilestone(ctx, &GetProjectMilestoneArgs{
// 			MilestoneId: 10,
// 			Project:     "foo/bar",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupProjectMilestone(ctx *pulumi.Context, args *LookupProjectMilestoneArgs, opts ...pulumi.InvokeOption) (*LookupProjectMilestoneResult, error) {
	var rv LookupProjectMilestoneResult
	err := ctx.Invoke("gitlab:index/getProjectMilestone:getProjectMilestone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectMilestone.
type LookupProjectMilestoneArgs struct {
	MilestoneId int    `pulumi:"milestoneId"`
	Project     string `pulumi:"project"`
}

// A collection of values returned by getProjectMilestone.
type LookupProjectMilestoneResult struct {
	CreatedAt   string `pulumi:"createdAt"`
	Description string `pulumi:"description"`
	DueDate     string `pulumi:"dueDate"`
	Expired     bool   `pulumi:"expired"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Iid         int    `pulumi:"iid"`
	MilestoneId int    `pulumi:"milestoneId"`
	Project     string `pulumi:"project"`
	ProjectId   int    `pulumi:"projectId"`
	StartDate   string `pulumi:"startDate"`
	State       string `pulumi:"state"`
	Title       string `pulumi:"title"`
	UpdatedAt   string `pulumi:"updatedAt"`
	WebUrl      string `pulumi:"webUrl"`
}

func LookupProjectMilestoneOutput(ctx *pulumi.Context, args LookupProjectMilestoneOutputArgs, opts ...pulumi.InvokeOption) LookupProjectMilestoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectMilestoneResult, error) {
			args := v.(LookupProjectMilestoneArgs)
			r, err := LookupProjectMilestone(ctx, &args, opts...)
			var s LookupProjectMilestoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectMilestoneResultOutput)
}

// A collection of arguments for invoking getProjectMilestone.
type LookupProjectMilestoneOutputArgs struct {
	MilestoneId pulumi.IntInput    `pulumi:"milestoneId"`
	Project     pulumi.StringInput `pulumi:"project"`
}

func (LookupProjectMilestoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMilestoneArgs)(nil)).Elem()
}

// A collection of values returned by getProjectMilestone.
type LookupProjectMilestoneResultOutput struct{ *pulumi.OutputState }

func (LookupProjectMilestoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMilestoneResult)(nil)).Elem()
}

func (o LookupProjectMilestoneResultOutput) ToLookupProjectMilestoneResultOutput() LookupProjectMilestoneResultOutput {
	return o
}

func (o LookupProjectMilestoneResultOutput) ToLookupProjectMilestoneResultOutputWithContext(ctx context.Context) LookupProjectMilestoneResultOutput {
	return o
}

func (o LookupProjectMilestoneResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) DueDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.DueDate }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupProjectMilestoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) Iid() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) int { return v.Iid }).(pulumi.IntOutput)
}

func (o LookupProjectMilestoneResultOutput) MilestoneId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) int { return v.MilestoneId }).(pulumi.IntOutput)
}

func (o LookupProjectMilestoneResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o LookupProjectMilestoneResultOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.Title }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupProjectMilestoneResultOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMilestoneResult) string { return v.WebUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectMilestoneResultOutput{})
}
