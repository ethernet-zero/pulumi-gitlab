// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gitlab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectIssueTaskCompletionStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectIssueTaskCompletionStatusArgs Empty = new ProjectIssueTaskCompletionStatusArgs();

    @Import(name="completedCount")
    private @Nullable Output<Integer> completedCount;

    public Optional<Output<Integer>> completedCount() {
        return Optional.ofNullable(this.completedCount);
    }

    @Import(name="count")
    private @Nullable Output<Integer> count;

    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    private ProjectIssueTaskCompletionStatusArgs() {}

    private ProjectIssueTaskCompletionStatusArgs(ProjectIssueTaskCompletionStatusArgs $) {
        this.completedCount = $.completedCount;
        this.count = $.count;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectIssueTaskCompletionStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectIssueTaskCompletionStatusArgs $;

        public Builder() {
            $ = new ProjectIssueTaskCompletionStatusArgs();
        }

        public Builder(ProjectIssueTaskCompletionStatusArgs defaults) {
            $ = new ProjectIssueTaskCompletionStatusArgs(Objects.requireNonNull(defaults));
        }

        public Builder completedCount(@Nullable Output<Integer> completedCount) {
            $.completedCount = completedCount;
            return this;
        }

        public Builder completedCount(Integer completedCount) {
            return completedCount(Output.of(completedCount));
        }

        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public ProjectIssueTaskCompletionStatusArgs build() {
            return $;
        }
    }

}
